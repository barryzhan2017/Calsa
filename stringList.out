; ModuleID = 'MicroC'
source_filename = "MicroC"

@0 = private unnamed_addr constant [3 x i8] c"aa\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"bb\00", align 1
@2 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@3 = private unnamed_addr constant [3 x i8] c"dd\00", align 1
@4 = private unnamed_addr constant [3 x i8] c"ee\00", align 1
@fmt = private unnamed_addr constant [22 x i8] c"[%s, %s, %s, %s, %s]\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [22 x i8] c"[%d, %d, %d, %d, %d]\0A\00", align 1
@fmt.4 = private unnamed_addr constant [22 x i8] c"[%d, %d, %d, %d, %d]\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %x = alloca [5 x i8*]
  %y = alloca i32
  %z = alloca [5 x i32]
  store [5 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i32 0, i32 0)], [5 x i8*]* %x
  store i32 1, i32* %y
  store [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5], [5 x i32]* %z
  %x1 = load [5 x i8*], [5 x i8*]* %x
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @fmt, i32 0, i32 0), [5 x i8*] %x1)
  %addr = getelementptr inbounds [5 x i8*], [5 x i8*]* %x, i32 0, i32 0
  %x2 = load i8*, i8** %addr
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i8* %x2)
  %y4 = load i32, i32* %y
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i32 %y4)
  %z6 = load [5 x i32], [5 x i32]* %z
  %printf7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @fmt.3, i32 0, i32 0), [5 x i32] %z6)
  %addr8 = getelementptr inbounds [5 x i32], [5 x i32]* %z, i32 0, i32 2
  store i32 10, i32* %addr8
  %z9 = load [5 x i32], [5 x i32]* %z
  %printf10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @fmt.4, i32 0, i32 0), [5 x i32] %z9)
  ret i32 0
}
