; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %x = alloca [5 x i32]
  store [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5], [5 x i32]* %x
  %addr = getelementptr inbounds [5 x i32], [5 x i32]* %x, i32 0, i32 2
  store i32 10, i32* %addr
  %addr1 = getelementptr inbounds [5 x i32], [5 x i32]* %x, i32 0, i32 2
  %x2 = load i32, i32* %addr1
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %x2)
  ret i32 0
}
